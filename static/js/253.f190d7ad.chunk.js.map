{"version":3,"file":"static/js/253.f190d7ad.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ComtactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Pages/Contacts/Contacts.styled.js","components/Pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { TiUserAddOutline } from 'react-icons/ti';\nimport { RiCloseLine } from 'react-icons/ri';\n\nexport const AddContainer = styled.div`\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  width: 800px;\n  margin: 0 auto;\n  padding: 10px 30px;\n  background-color: #e0f7fa;\n  color: #00838f;\n  border: 5px double #000;\n  border-bottom: none;\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const AddIcon = styled(TiUserAddOutline)`\n  color: #00838f;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 20px;\n  height: 20px;\n  border: 1px solid #00838f;\n  border-radius: 50%;\n  padding: 10px;\n  &:hover {\n    background-color: rgba(245, 244, 154, 1);\n  }\n`;\nexport const CloseIcon = styled(RiCloseLine)`\n  color: #00838f;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 20px;\n  height: 20px;\n  border: 1px solid #00838f;\n  border-radius: 50%;\n  padding: 10px;\n  &:hover {\n    background-color: rgba(245, 244, 154, 1);\n  }\n`;\nexport const ButtonAdd = styled.button`\n  border: none;\n  border-radius: 50%;\n  background-color: inherit;\n`;\n\nexport const Input = styled.input`\n  width: 235px;\n  border: transparent;\n  background-color: transparent;\n  border-bottom: 1px solid #00838f;\n  margin-right: 50px;\n  outline: none;\n  color: #00838f;\n  height: 20px;\n  font-family: inherit;\n  font-size: 18px;\n\n  &::placeholder {\n    color: #60c7d1;\n  }\n\n  ,\n  &:focus {\n    outline: 1px solid #00838f;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/Contacts/contacts-operations';\nimport { ButtonAddCont } from 'components/Button/Button.styled';\n\nimport {\n  AddIcon,\n  ButtonAdd,\n  AddContainer,\n  Input,\n  CloseIcon,\n} from './ContactForm.styled';\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [isFormVisible, setIsFormVisible] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const sameContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (sameContact) {\n      alert(`${name} is already in contacts!`);\n      form.reset();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  const handleToggleForm = () => {\n    setIsFormVisible(prevState => !prevState);\n  };\n\n  return (\n    <AddContainer>\n      <ButtonAdd onClick={handleToggleForm}>\n        {isFormVisible ? <CloseIcon /> : <AddIcon />}\n      </ButtonAdd>\n      {isFormVisible ? (\n        <form type=\"submit\" onSubmit={handleSubmit}>\n          <Input\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter name...\"\n            required\n          />\n\n          <Input\n            label=\"Phone Number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Enter number...\"\n            required\n          />\n          <ButtonAddCont type=\"submit\">Add contact</ButtonAddCont>\n        </form>\n      ) : (\n        <span>Add new contact</span>\n      )}\n    </AddContainer>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  gap: 30px;\n  margin-bottom: 20px;\n  align-items: center;\n  width: 100%;\n  font-family: inherit;\n  sans-serif;\n  font-weight: 500;\n  font-size: 1.2rem;    \n  line-height: 1.4375em;\n  letter-spacing: 0.1em;\n`;\n\nexport const Text = styled.p`\n  width: 300px;\n`;\nexport const ButtonDelete = styled.button`\n  border: none;\n  border-radius: 50%;\n  background-color: inherit;\n`;\n\nexport const IconDelete = styled(RiDeleteBin6Line)`\n  color: #00838f;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 20px;\n  height: 20px;\n  border: 1px solid #00838f;\n  border-radius: 50%;\n  padding: 10px;\n  &:hover {\n    background-color: rgba(245, 244, 154, 1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/contacts-operations';\nimport { Item, ButtonDelete, Text, IconDelete } from './ContactListItem.styled';\nimport Avatar from 'components/Avatar/Avatar';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <Item key={id}>\n      <Avatar name={name} />\n      <Text>{name}</Text>\n      <Text>{number}</Text>\n      <ButtonDelete type=\"button\" onClick={handleDelete}>\n        <IconDelete />\n      </ButtonDelete>\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 800px;\n  max-hight: 800px;\n  margin: 0 auto;\n  padding: 10px 30px;\n  background-color: #e0f7fa;\n  color: #00838f;\n  border: 5px double #000;\n  border-top: none;\n  border-radius: 10px;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  text-align: center;\n  font-size: 30px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/Contacts/contacts-operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectFiltredContacts,\n} from 'redux/selectors';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\n\nimport { Container, SubTitle } from './ComtactList.styled';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFiltredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isLoading && !error && <LinearProgress />}\n      {error && <b>Oops! Something went wrong. Please try again later.</b>}\n      <SubTitle>- - - Contacts List - - -</SubTitle>\n      <ul>\n        {filteredContacts.map(contact => (\n          <ContactListItem\n            contact={contact}\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        ))}\n      </ul>\n    </Container>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nimport { MdOutlinePersonSearch } from 'react-icons/md';\n\nexport const SearchContainer = styled.div`\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  width: 800px;\n  margin: 0 auto;\n  padding: 10px 30px;\n  background-color: #e0f7fa;\n  color: #00838f;\n  border: 5px double #000;\n  border-top: none;\n  border-radius: 0 0 10px 10px;\n`;\n\nexport const Form = styled.form`\n  background-color: #e0f7fa;\n  margin: 0 auto 2px;\n  padding: 0 30px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px 10px 0 0;\n  align-items: center;\n  border: 5px double #000;\n  border-bottom: none;\n`;\n\nexport const Input = styled.input`\n  width: 520px;\n  border: transparent;\n  background-color: transparent;\n  border-bottom: 1px solid #00838f;\n  margin-right: 50px;\n  outline: none;\n  color: #00838f;\n  height: 20px;\n  font-family: inherit;\n  font-size: 18px;\n\n  &::placeholder {\n    color: #60c7d1;\n  }\n\n  ,\n  &:focus {\n    outline: 1px solid #00838f;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-top: 10px;\n  color: #00838f;\n  font-size: 20px;\n`;\n\nexport const SearchIcon = styled(MdOutlinePersonSearch)`\n  color: #00838f;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 20px;\n  height: 20px;\n  border: 1px solid #00838f;\n  border-radius: 50%;\n  padding: 10px;\n  &:hover {\n    background-color: rgba(245, 244, 154, 1);\n  }\n`;\n\nexport const SearhcButton = styled.button`\n  border: none;\n  border-radius: 50%;\n  background-color: inherit;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/Filter/filterSlice';\nimport {\n  Input,\n  SearchIcon,\n  SearhcButton,\n  SearchContainer,\n} from './Filter.styled';\nimport { CloseIcon } from 'components/ContactForm/ContactForm.styled';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const [isFormVisible, setIsFormVisible] = useState(false);\n\n  const handleChange = event => {\n    const query = event.target.value;\n    dispatch(setFilter(query));\n  };\n\n  const handleToggleForm = () => {\n    setIsFormVisible(prevState => !prevState);\n  };\n\n  return (\n    <SearchContainer>\n      <SearhcButton onClick={handleToggleForm}>\n        {isFormVisible ? <CloseIcon /> : <SearchIcon />}\n      </SearhcButton>\n      {isFormVisible ? (\n        <form>\n          <Input\n            type=\"text\"\n            onChange={handleChange}\n            placeholder=\"Find contact by name\"\n          ></Input>\n        </form>\n      ) : (\n        <span>Find contact</span>\n      )}\n    </SearchContainer>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const BoxForm = styled.div`\n  margin-left: 10px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Title = styled.h1`\n  color: rgb(245 244 154);\n  margin-bottom: 30px;\n  text-align: center;\n`;\n","import React from 'react';\n\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport { Container, Title } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <Container>\n        <ContactForm />\n\n        <Filter />\n        <ContactList />\n      </Container>\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["AddContainer","styled","_templateObject","_taggedTemplateLiteral","AddIcon","TiUserAddOutline","_templateObject2","CloseIcon","RiCloseLine","_templateObject3","ButtonAdd","_templateObject4","Input","_templateObject5","dispatch","useDispatch","contacts","useSelector","selectContacts","_useState","useState","_useState2","_slicedToArray","isFormVisible","setIsFormVisible","_jsxs","children","_jsx","onClick","prevState","type","onSubmit","event","preventDefault","form","target","name","elements","value","number","find","contact","toLowerCase","alert","concat","reset","addContact","label","pattern","title","placeholder","required","ButtonAddCont","Item","Text","ButtonDelete","IconDelete","RiDeleteBin6Line","_ref","id","Avatar","deleteContact","Container","SubTitle","filteredContacts","selectFiltredContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","LinearProgress","map","ContactListItem","SearchContainer","SearchIcon","MdOutlinePersonSearch","SearhcButton","_templateObject6","onChange","query","setFilter","Title","ContactForm","Filter","ContactList"],"sourceRoot":""}